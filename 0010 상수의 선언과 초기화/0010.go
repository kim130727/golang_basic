/*
- 선언 형태 : `const 상수이름 상수형`
- 한번 선언 및 초기화되면 수정할 수 없기 때문에 꼭 선언과 동시에 초기화를 해야함. 선언만 한다면 에러가 발생함.
- 초기화 후에 사용하지 않아도 에러가 발생하지 않음. 변수와 다르게 상수는 명시하는 것 자체에 의미가 있기 때문.
- 상수는 `var` 키워드 대신에 `const` 키워드를 사용하고 생략할 수 없기 때문에 자연스럽게 `:=` 용법을 사용할 수 없음.
상수는 변수와 다르게 괄호()를 이용해 여러 개의 값을 묶어서 초기화할 수 있으며, 다른 형이더라도 초기화할 수 있음
- 묶어서 선언된 상수들 중에서 첫번째 값은 꼭 선언되어야 함. 선언되지 않은 값은 바로 전 상수의 값을 가짐
- `iota`라는 식별자를 값으로 초기화하면 그 후에 초기화하지 않고 이어지는 상수들은 순서(index)가 값으로 저장됨.
   'iota'를 사용하면 순차적으로 1씩 증가되는 값을 부여 받는다.
- 5부터 받은 이유 → 숫자 0으로 시작해서 6번째 상수이기 때문
*/

package main

import "fmt"

const (
	c1 = 10 //첫 번째 값은 무조건 초기화해야 함
	c2
	c3
	c4 = "goorm" //다른 형 선언 가능
	c5
	c6 = iota //c8까지 index값 저장
	c7
	c8
	c9 = "earth"
	c10
	c11 = "End"
)

func main() {
	fmt.Println(c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11)
}
